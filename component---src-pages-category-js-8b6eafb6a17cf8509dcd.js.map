{"version":3,"sources":["webpack:///./src/pages/category.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["CategoryPage","props","data","posts","edges","facebook","site","siteMetadata","categories","forEach","edge","category","node","frontmatter","push","categoryList","key","Fragment","Consumer","theme","color","brand","primary","title","map","item","query","List","space","stack","m","xs","font","size","s","lineHeight","l","slug","fields","to"],"mappings":"gOAkFeA,UAxEM,SAAAC,GAAU,IAAD,EAQxBA,EANFC,KACkBC,EAHQ,EAGxBA,MAASC,MAESC,EALM,EAIxBC,KACEC,aAAgBF,SAMhBG,EAAa,GACnBL,EAAMM,SAAQ,SAAAC,GAAS,IAGFC,EAEfD,EAHFE,KACEC,YAAeF,SAIfA,GAAwB,MAAZA,IACTH,EAAWG,KACdH,EAAWG,GAAY,IAEzBH,EAAWG,GAAUG,KAAKJ,OAI9B,IAAMK,EAAe,GAErB,IAAK,IAAIC,KAAOR,EACdO,EAAaD,KAAK,CAACE,EAAKR,EAAWQ,KAGrC,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,eAAaC,SAAd,MACG,SAAAC,GAAK,OACJ,kBAAC,IAAD,CAASA,MAAOA,GACd,kEAkBYA,EAAMC,MAAMC,MAAMC,aAjB5B,kBAAC,IAAD,CAAUC,MAAM,sBAAsBJ,MAAOA,KAE9CJ,EAAaS,KAAI,SAAAC,GAAI,OACpB,6BAAST,IAAKS,EAAK,GAAnB,sCAcUN,EAAMC,MAAMC,MAAMC,aAb1B,8DAaQH,EAAMC,MAAMC,MAAMC,aAZxB,kBAAC,IAAD,MADF,IACaG,EAAK,IAElB,kBAAC,IAAD,CAAMrB,MAAOqB,EAAK,GAAIN,MAAOA,QATnC,+JAmBcA,EAAMC,MAAMC,MAAMC,QAnBhC,eAmBcH,EAAMC,MAAMC,MAAMC,eAOpC,kBAAC,IAAD,CAAKjB,SAAUA,MAYd,IAAMqB,EAAK,c,6ECrCHC,EA5CF,SAAA1B,GAAU,IACbG,EAAiBH,EAAjBG,MAAOe,EAAUlB,EAAVkB,MAEf,OACE,kBAAC,IAAMF,SAAP,KACE,8DAoBcE,EAAMS,MAAMC,MAAMC,EACjBX,EAAMS,MAAME,EAIZX,EAAMS,MAAMG,GACVZ,EAAMa,KAAKC,KAAKC,EACdf,EAAMa,KAAKG,WAAWC,OA1BtChC,EAAMoB,KAAI,SAAAd,GAAS,IAAD,EAMbA,EAJFE,KACiBW,EAHF,EAGbV,YAAeU,MACLc,EAJG,EAIbC,OAAUD,KAId,OACE,wBAAIrB,IAAKqB,EAAT,sCAUQlB,EAAMS,MAAMC,MAAMC,EACjBX,EAAMS,MAAME,EAIZX,EAAMS,MAAMG,GACVZ,EAAMa,KAAKC,KAAKC,EACdf,EAAMa,KAAKG,WAAWC,OAhBjC,kBAAC,OAAD,CAAMG,GAAIF,GAAOd,QAZ3B,2FAqBgBJ,EAAMS,MAAMC,MAAMC,EArBlC,YAsBiBX,EAAMS,MAAME,EAtB7B,kEA0BiBX,EAAMS,MAAMG,GA1B7B,gBA2BmBZ,EAAMa,KAAKC,KAAKC,EA3BnC,gBA4BqBf,EAAMa,KAAKG,WAAWC,EA5B3C,eAqBgBjB,EAAMS,MAAMC,MAAMC,EACjBX,EAAMS,MAAME,EAIZX,EAAMS,MAAMG,GACVZ,EAAMa,KAAKC,KAAKC,EACdf,EAAMa,KAAKG,WAAWC,OCpC/C","file":"component---src-pages-category-js-8b6eafb6a17cf8509dcd.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { ThemeContext } from \"../layouts\";\r\nimport Article from \"../components/Article/\";\r\nimport Headline from \"../components/Article/Headline\";\r\nimport List from \"../components/List\";\r\nimport Seo from \"../components/Seo\";\r\n\r\nconst CategoryPage = props => {\r\n  const {\r\n    data: {\r\n      posts: { edges: posts },\r\n      site: {\r\n        siteMetadata: { facebook }\r\n      }\r\n    }\r\n  } = props;\r\n\r\n  // Create category list\r\n  const categories = {};\r\n  posts.forEach(edge => {\r\n    const {\r\n      node: {\r\n        frontmatter: { category }\r\n      }\r\n    } = edge;\r\n\r\n    if (category && category != null) {\r\n      if (!categories[category]) {\r\n        categories[category] = [];\r\n      }\r\n      categories[category].push(edge);\r\n    }\r\n  });\r\n\r\n  const categoryList = [];\r\n\r\n  for (var key in categories) {\r\n    categoryList.push([key, categories[key]]);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <Article theme={theme}>\r\n            <header>\r\n              <Headline title=\"Posts by categories\" theme={theme} />\r\n            </header>\r\n            {categoryList.map(item => (\r\n              <section key={item[0]}>\r\n                <h2>\r\n                  <FaTag /> {item[0]}\r\n                </h2>\r\n                <List edges={item[1]} theme={theme} />\r\n              </section>\r\n            ))}\r\n            {/* --- STYLES --- */}\r\n            <style jsx>{`\r\n              h2 {\r\n                margin: 0 0 0.5em;\r\n              }\r\n              h2 :global(svg) {\r\n                height: 0.8em;\r\n                fill: ${theme.color.brand.primary};\r\n              }\r\n            `}</style>\r\n          </Article>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n\r\n      <Seo facebook={facebook} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCategoryPage.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CategoryPage;\r\n\r\n//eslint-disable-next-line no-undef\r\nexport const query = graphql`\r\n  query PostsQuery {\r\n    posts: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\r\n      sort: { fields: [fields___prefix], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n            prefix\r\n          }\r\n          frontmatter {\r\n            title\r\n            category\r\n            author\r\n            cover {\r\n              children {\r\n                ... on ImageSharp {\r\n                  fluid(maxWidth: 800, maxHeight: 360) {\r\n                    ...GatsbyImageSharpFluid_withWebp\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        facebook {\r\n          appId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst List = props => {\r\n  const { edges, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul>\r\n        {edges.map(edge => {\r\n          const {\r\n            node: {\r\n              frontmatter: { title },\r\n              fields: { slug }\r\n            }\r\n          } = edge;\r\n\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      {/* --- STYLES --- */}\r\n      <style jsx>{`\r\n        ul {\r\n          margin: ${theme.space.stack.m};\r\n          padding: ${theme.space.m};\r\n          list-style: circle;\r\n        }\r\n        li {\r\n          padding: ${theme.space.xs} 0;\r\n          font-size: ${theme.font.size.s};\r\n          line-height: ${theme.font.lineHeight.l};\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  edges: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default List;\r\n","export { default } from \"./List\";\r\n"],"sourceRoot":""}