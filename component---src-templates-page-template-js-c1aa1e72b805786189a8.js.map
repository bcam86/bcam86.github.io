{"version":3,"sources":["webpack:///./src/components/Page/Page.js","webpack:///./src/templates/PageTemplate.js","webpack:///./src/components/Article/Bodytext.js","webpack:///./node_modules/core-js/modules/es6.string.bold.js"],"names":["Page","props","page","html","title","frontmatter","theme","Fragment","Headline","Bodytext","PageTemplate","data","facebook","site","siteMetadata","Consumer","Article","Seo","pageQuery","dangerouslySetInnerHTML","__html","time","duration","long","font","lineHeight","s","size","l","m","xxl","weight","bold","color","brand","primary","radius","default","line","neutral","gray","c","createHTML","this"],"mappings":"0JA8BeA,EAxBF,SAAAC,GAAU,IAAD,EAOhBA,EALFC,KACEC,EAHgB,EAGhBA,KACeC,EAJC,EAIhBC,YAAeD,MAEjBE,EACEL,EADFK,MAGF,OACE,kBAAC,IAAMC,SAAP,KACE,gCACE,kBAACC,EAAA,EAAD,CAAUJ,MAAOA,EAAOE,MAAOA,KAEjC,kBAACG,EAAA,EAAD,CAAUN,KAAMA,EAAMG,MAAOA,M,SCpBnC,0CAqCeI,UA7BM,SAAAT,GAAU,IAAD,EAQxBA,EANFU,KACET,EAHwB,EAGxBA,KAEkBU,EALM,EAIxBC,KACEC,aAAgBF,SAKtB,OACE,kBAAC,IAAML,SAAP,KACE,kBAAC,eAAaQ,SAAd,MACG,SAAAT,GAAK,OACJ,kBAACU,EAAA,EAAD,CAASV,MAAOA,GACd,kBAAC,EAAD,CAAMJ,KAAMA,EAAMI,MAAOA,QAK/B,kBAACW,EAAA,EAAD,CAAKN,KAAMT,EAAMU,SAAUA,MApBjC,IAgCaM,EAAS,c,4EC4CPT,IAjFE,SAAAR,GAAU,IACjBE,EAAgBF,EAAhBE,KAAMG,EAAUL,EAAVK,MAEd,OACE,kBAAC,IAAMC,SAAP,KACE,yBAA0BY,wBAAyB,CAAEC,OAAQjB,GAA7D,sCAK0BG,EAAMe,KAAKC,SAASC,KAQzBjB,EAAMkB,KAAKC,WAAWC,EACxBpB,EAAMkB,KAAKG,KAAKC,EAIhBtB,EAAMkB,KAAKG,KAAKE,EACdvB,EAAMkB,KAAKC,WAAWI,EAIxBvB,EAAMkB,KAAKG,KAAKD,EACdpB,EAAMkB,KAAKC,WAAWK,IAatBxB,EAAMkB,KAAKO,OAAOC,KACxB1B,EAAM2B,MAAMC,MAAMC,QAOV7B,EAAMqB,KAAKS,OAAOC,QAEf/B,EAAMgC,KAAKL,MAGjB3B,EAAM2B,MAAMM,QAAQC,KAAKC,MAlD7C,cADF,uRAM4BnC,EAAMe,KAAKC,SAASC,KANhD,+BAM4BjB,EAAMe,KAAKC,SAASC,KANhD,uBAM4BjB,EAAMe,KAAKC,SAASC,KANhD,yKAcuBjB,EAAMkB,KAAKC,WAAWC,EAd7C,cAeqBpB,EAAMkB,KAAKG,KAAKC,EAfrC,4DAmBqBtB,EAAMkB,KAAKG,KAAKE,EAnBrC,gBAoBuBvB,EAAMkB,KAAKC,WAAWI,EApB7C,2DAwBqBvB,EAAMkB,KAAKG,KAAKD,EAxBrC,gBAyBuBpB,EAAMkB,KAAKC,WAAWK,IAzB7C,gQAsCuBxB,EAAMkB,KAAKO,OAAOC,KAtCzC,UAuCiB1B,EAAM2B,MAAMC,MAAMC,QAvCnC,wLA8CyB7B,EAAMqB,KAAKS,OAAOC,QA9C3C,qCAgD4B/B,EAAMgC,KAAKL,MAhDvC,6EAmDsB3B,EAAM2B,MAAMM,QAAQC,KAAKC,EAnD/C,iZAM4BnC,EAAMe,KAAKC,SAASC,KAQzBjB,EAAMkB,KAAKC,WAAWC,EACxBpB,EAAMkB,KAAKG,KAAKC,EAIhBtB,EAAMkB,KAAKG,KAAKE,EACdvB,EAAMkB,KAAKC,WAAWI,EAIxBvB,EAAMkB,KAAKG,KAAKD,EACdpB,EAAMkB,KAAKC,WAAWK,IAatBxB,EAAMkB,KAAKO,OAAOC,KACxB1B,EAAM2B,MAAMC,MAAMC,QAOV7B,EAAMqB,KAAKS,OAAOC,QAEf/B,EAAMgC,KAAKL,MAGjB3B,EAAM2B,MAAMM,QAAQC,KAAKC,Q,iCCxDnD,EAAQ,IAAR,CAA0B,QAAQ,SAAUC,GAC1C,OAAO,WACL,OAAOA,EAAWC,KAAM,IAAK,GAAI","file":"component---src-templates-page-template-js-c1aa1e72b805786189a8.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Headline from \"../Article/Headline\";\r\nimport Bodytext from \"../Article/Bodytext\";\r\n\r\nconst Page = props => {\r\n  const {\r\n    page: {\r\n      html,\r\n      frontmatter: { title }\r\n    },\r\n    theme\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <Headline title={title} theme={theme} />\r\n      </header>\r\n      <Bodytext html={html} theme={theme} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPage.propTypes = {\r\n  page: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport Seo from \"../components/Seo\";\r\nimport Article from \"../components/Article\";\r\nimport Page from \"../components/Page\";\r\nimport { ThemeContext } from \"../layouts\";\r\n\r\nconst PageTemplate = props => {\r\n  const {\r\n    data: {\r\n      page,\r\n      site: {\r\n        siteMetadata: { facebook }\r\n      }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeContext.Consumer>\r\n        {theme => (\r\n          <Article theme={theme}>\r\n            <Page page={page} theme={theme} />\r\n          </Article>\r\n        )}\r\n      </ThemeContext.Consumer>\r\n\r\n      <Seo data={page} facebook={facebook} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPageTemplate.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PageTemplate;\r\n\r\n//eslint-disable-next-line no-undef\r\nexport const pageQuery = graphql`\r\n  query PageByPath($slug: String!) {\r\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        facebook {\r\n          appId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Bodytext = props => {\r\n  const { html, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"bodytext\" dangerouslySetInnerHTML={{ __html: html }} />\r\n\r\n      <style jsx>{`\r\n        .bodytext {\r\n          animation-name: bodytextEntry;\r\n          animation-duration: ${theme.time.duration.long};\r\n\r\n          :global(h2),\r\n          :global(h3) {\r\n            margin: 1.5em 0 1em;\r\n          }\r\n\r\n          :global(h2) {\r\n            line-height: ${theme.font.lineHeight.s};\r\n            font-size: ${theme.font.size.l};\r\n          }\r\n\r\n          :global(h3) {\r\n            font-size: ${theme.font.size.m};\r\n            line-height: ${theme.font.lineHeight.m};\r\n          }\r\n\r\n          :global(p) {\r\n            font-size: ${theme.font.size.s};\r\n            line-height: ${theme.font.lineHeight.xxl};\r\n            margin: 0 0 1.5em;\r\n          }\r\n          :global(ul) {\r\n            list-style: circle;\r\n            margin: 0 0 1.5em;\r\n            padding: 0 0 0 1.5em;\r\n          }\r\n          :global(li) {\r\n            margin: 0.7em 0;\r\n            line-height: 1.5;\r\n          }\r\n          :global(a) {\r\n            font-weight: ${theme.font.weight.bold};\r\n            color: ${theme.color.brand.primary};\r\n            text-decoration: underline;\r\n          }\r\n          :global(a.gatsby-resp-image-link) {\r\n            border: 0;\r\n            display: block;\r\n            margin: 2.5em 0;\r\n            border-radius: ${theme.size.radius.default};\r\n            overflow: hidden;\r\n            border: 1px solid ${theme.line.color};\r\n          }\r\n          :global(code.language-text) {\r\n            background: ${theme.color.neutral.gray.c};\r\n            text-shadow: none;\r\n            color: inherit;\r\n            padding: 0.1em 0.3em 0.2em;\r\n            border-radius: 0.1em;\r\n          }\r\n        }\r\n\r\n        @keyframes bodytextEntry {\r\n          from {\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            opacity: 1;\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nBodytext.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Bodytext;\r\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n"],"sourceRoot":""}