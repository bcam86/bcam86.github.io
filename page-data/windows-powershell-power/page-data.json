{"componentChunkName":"component---src-templates-post-template-js","path":"/windows-powershell-power/","webpackCompilationHash":"b7eb841a8b57b8fa0403","result":{"data":{"post":{"id":"a3119f0b-068c-53b8-83ce-6fbf06bbd8a2","html":"<h3>PowerShell is a task automation and configuration management framework from Microsoft</h3>\n<p>It consisting of a command-line shell and associated scripting language. Initially a Windows component only, known as Windows PowerShell, it was made open-source and cross-platform on August 2016 with the introduction of PowerShell Core. This shell is based on the .NET framework, and it includes a command-line shell and a scripting language.</p>\n<p>Powershell contains hundreds of commands, which are called Cmdlets. We can easely list them all with</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Get<span class=\"token operator\">-</span>Command <span class=\"token operator\">-</span>Type Cmdlet</code></pre></div>\n<p>In this example I will show you how I made a simple automation process to build and publish this blog, which is made in GatsbyJS and published at github pages.</p>\n<p>First part of the script, it cleans and build the react app (gatsbyjs project)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">gatsby clean\ngastby build</code></pre></div>\n<p>Then it will wipe the old build, which was cloned on a directory. Keep in mind that I had to keep the .git folder, so we are passing a parameter to exclude the .git folder while cleaning all other files on C:\\git\\github.io\\ recursively</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Remove<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>recurse <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\github<span class=\"token punctuation\">.</span>io\\<span class=\"token operator\">*</span> <span class=\"token operator\">-</span>exclude <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\github<span class=\"token punctuation\">.</span>io\\<span class=\"token punctuation\">.</span>git\\</code></pre></div>\n<p>Then it will create a file named CNAME and it will add a text called code.report inside</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">New<span class=\"token operator\">-</span>Item <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\github<span class=\"token punctuation\">.</span>io\\<span class=\"token constant\">CNAME</span>\nSet<span class=\"token operator\">-</span>Content <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\github<span class=\"token punctuation\">.</span>io\\<span class=\"token constant\">CNAME</span> <span class=\"token string\">'code.report'</span></code></pre></div>\n<p>The last thing I had to do is to copy all the contents of the gatsby build located on C:\\git\\cdrp\\public* onto C:\\git\\github.io, the -Recurse parameter states that the copy must include all files and subfolders</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Copy<span class=\"token operator\">-</span>Item <span class=\"token operator\">-</span>Path <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\cdrp\\<span class=\"token keyword\">public</span>\\<span class=\"token operator\">*</span> <span class=\"token operator\">-</span>Destination <span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\git\\github<span class=\"token punctuation\">.</span>io\\ <span class=\"token operator\">-</span>Recurse</code></pre></div>","fields":{"slug":"/windows-powershell-power/","prefix":"2019-09-28"},"frontmatter":{"title":"Windows Powershell","author":"Bernardo Camargo","category":"windows","cover":{"childImageSharp":{"resize":{"src":"/static/f6075eb7121a827cfcdcb0082b80eaa5/c83a6/powershell.jpg"}}}}},"authornote":{"id":"8cf19e6f-22ca-5574-82f1-600a295f17f0","html":"<p><strong>Bernardo Camargo</strong> Just sharing some code insights that might help you out somehow!</p>"},"site":{"siteMetadata":{"facebook":{"appId":"591875029"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/windows-powershell-power/","prev":{"id":"11ffe77b-57f0-5ec4-8df5-de77bacf1d88","fields":{"slug":"/windows-powershell-power-off-computer/","prefix":"2019-09-28","source":"posts"},"frontmatter":{"title":"Power off computer with Powershell","category":"windows"}},"next":{"id":"9660ccb7-4472-5821-909d-40f37dd76e36","fields":{"slug":"/resize-images-linux/","prefix":"2019-09-28","source":"posts"},"frontmatter":{"title":"Using convert to resize and rotate images","category":"unix"}},"source":"posts"}}}